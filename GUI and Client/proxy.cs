//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="Contracts")]
public interface Contracts
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Contracts/LoadDb", ReplyAction="http://tempuri.org/Contracts/LoadDbResponse")]
    void LoadDb(List<string> paths, List<string> locatie, List<string> evenimente, List<string> persons, string persons2, string locatie2, string evenimente2);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Contracts/LoadDb", ReplyAction="http://tempuri.org/Contracts/LoadDbResponse")]
    System.Threading.Tasks.Task LoadDbAsync(List<string> paths, List<string> locatie, List<string> evenimente, List<string> persons, string persons2, string locatie2, string evenimente2);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Contracts/RemovePhoto", ReplyAction="http://tempuri.org/Contracts/DeleteMediaResponse")]
    void RemovePhoto(string path);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Contracts/RemovePhoto", ReplyAction="http://tempuri.org/Contracts/RemovePhotoResponse")]
    System.Threading.Tasks.Task RemovePhotoAsync(string path);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Contracts/UploadPhoto", ReplyAction="http://tempuri.org/Contracts/UploadPhotoResponse")]
    void UploadPhoto(string imglocation, string fullname, string date, string location, string eveniment, string person);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Contracts/UploadPhoto", ReplyAction="http://tempuri.org/Contracts/UploadPhotoResponse")]
    System.Threading.Tasks.Task UploadPhotoAsync(string imglocation, string fullname, string date, string location, string eveniment, string person);
    
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface ContractsChannel : Contracts, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class MediaClient : System.ServiceModel.ClientBase<Contracts>, Contracts
{
    
    public MediaClient()
    {
    }
    
    public MediaClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public MediaClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public MediaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public MediaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public void LoadDb(List<string> paths, List<string> locatie, List<string> evenimente, List<string> persons, string persons2, string locatie2, string evenimente2)
    {
        base.Channel.LoadDb(paths,locatie,evenimente,persons,persons2,locatie2,evenimente2);
    }
    
    public System.Threading.Tasks.Task LoadDbAsync(List<string> paths, List<string> locatie, List<string> evenimente, List<string> persons, string persons2, string locatie2, string evenimente2)
    {
        return base.Channel.LoadDbAsync(paths,locatie,evenimente,persons,persons2,locatie2,evenimente2);
    }
    
    public void RemovePhoto(string path)
    {
        base.Channel.RemovePhoto(path);
    }
    
    public System.Threading.Tasks.Task RemovePhotoAsync(string path)
    {
        return base.Channel.RemovePhotoAsync(path);
    }
    
    public string UploadPhoto(string imglocation, string fullname, string date, string location, string eveniment, string person)
    {
        return base.Channel.UploadPhoto(imglocation,fullname,date,location,eveniment,person);
    }
    
    public System.Threading.Tasks.Task<string> UploadPhotoAsync(string imglocation, string fullname, string date, string location, string eveniment, string persone)
    {
        return base.Channel.UploadPhotoAsync(imglocation, fullname, date, location, eveniment, person);
    }
}
